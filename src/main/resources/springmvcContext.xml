<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <!-- 扫描控制器,自动扫描bean,把做了注解的类转换为bean -->
    <context:component-scan base-package="com.ntd.controller">
        <!--<context:exclude-filter type="regex" expression="com\.ntd\.controller\.job\..*"/>-->
    </context:component-scan>

    <!-- 配置静态资源，静态资源因为没有相应的Controller去处理就会被default servlet处理 -->
    <mvc:default-servlet-handler/>
    <mvc:resources location="/style/" mapping="/style/**"/>
    <mvc:resources location="/image/" mapping="/image/**"/>
    <mvc:resources location="/script/" mapping="/script/**"/>
    <mvc:resources location="/view/" mapping="/view/**"/>
    <mvc:resources location="/errorpage/" mapping="/errorpage/**"/>

    <!-- 视图控制，对模型视图名称的解析,在请求模型视图名称添加前后缀-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置Spring MVC注解驱动，即默认的注解映射的支持 -->
    <!-- <mvc:annotation-driven /> 是一种简写形式，会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter这两个bean，是spring MVC为@Controller分发请求所必须的。
    并提供了相关数据绑定支持，@NumberFormatannotation，@DateTimeFormat，@Valid，读写XML的支持（JAXB），读写JSON的支持（Jackson）等。
    在spring3.2中，改成了自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter这两个bean，上边两个废弃。 -->
    <mvc:annotation-driven/>

    <!-- 利用spring自带的拦截器机制实现自定义拦截器 start -->
    <mvc:interceptors>
        <!-- 多个拦截器,顺序执行 -->
        <mvc:interceptor>
            <!-- /**的意思是所有文件夹及里面的子文件夹，/*是所有文件夹，不含子文件夹，/是web项目的根目录 -->
            <mvc:mapping path="/**" />
            <!-- 排除拦截的地址 -->
            <mvc:exclude-mapping path="/" />
            <bean class="com.ntd.interceptor.UserInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/user/**" />
            <mvc:exclude-mapping path="/" />
            <bean class="com.ntd.interceptor.UrlTimeInterceptor">
                <property name="openingTime" value="9" />
                <property name="closingTime" value="12" />
                <property name="mappingURL" value="/user/*" />
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <!-- 利用spring自带的拦截器机制实现自定义拦截器 end -->

</beans>